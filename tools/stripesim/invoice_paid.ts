import { url, stripeApiKey, stripeWebhookSecret } from './sim-env';
import { simulateStripeWebhook } from './sim-hook';

const event = {
  id: 'evt_1M1zTSIIiJlhURo2mtfnVEdR',
  object: 'event',
  api_version: null,
  created: 1667943410,
  data: {
    object: {
      id: 'in_1M323q2eZvKYlo2CVABrMDuB',
      object: 'invoice',
      account_country: 'US',
      account_name: 'Stripe.com',
      account_tax_ids: null,
      amount_due: 100,
      amount_paid: 0,
      amount_remaining: 100,
      application: null,
      application_fee_amount: null,
      attempt_count: 0,
      attempted: false,
      auto_advance: true,
      automatic_tax: {
        enabled: false,
        status: null,
      },
      billing_reason: 'manual',
      charge: null,
      collection_method: 'charge_automatically',
      created: 1668191682,
      currency: 'usd',
      custom_fields: null,
      customer: 'cus_Mm8PQkQBncel9Jaaa',
      customer_address: {
        city: 'Tel Aviv-Yafo',
        country: 'IL',
        line1: '212134',
        line2: '124234',
        postal_code: '12343',
        state: null,
      },
      customer_email: 'coby@base.la',
      customer_name: 'coby benveniste',
      customer_phone: null,
      customer_shipping: null,
      customer_tax_exempt: 'none',
      customer_tax_ids: [
        {
          type: 'eu_vat',
          value: 'DE123456789',
        },
      ],
      default_payment_method: null,
      default_source: null,
      default_tax_rates: [],
      description: null,
      discount: null,
      discounts: [],
      due_date: null,
      ending_balance: null,
      footer: null,
      from_invoice: null,
      hosted_invoice_url: null,
      invoice_pdf: null,
      last_finalization_error: null,
      latest_revision: null,
      lines: {
        object: 'list',
        data: [
          {
            id: 'il_1M323qIIiJlhURo2aQK7Sfir',
            object: 'line_item',
            amount: 100,
            amount_excluding_tax: 100,
            currency: 'usd',
            description: 'My First Invoice Item (created for API docs)',
            discount_amounts: [],
            discountable: true,
            discounts: [],
            invoice_item: 'ii_1M323qIIiJlhURo2QRcxyHM1',
            livemode: false,
            metadata: {},
            period: {
              end: 1668191682,
              start: 1668191682,
            },
            price: {
              id: 'price_1M322q2eZvKYlo2CmSITDeXS',
              object: 'price',
              active: true,
              billing_scheme: 'per_unit',
              created: 1668191620,
              currency: 'usd',
              custom_unit_amount: null,
              livemode: false,
              lookup_key: null,
              metadata: {},
              nickname: null,
              product: 'prod_MGiZ1lqmgqM2o0',
              recurring: null,
              tax_behavior: 'unspecified',
              tiers_mode: null,
              transform_quantity: null,
              type: 'one_time',
              unit_amount: 100,
              unit_amount_decimal: '100',
            },
            proration: false,
            proration_details: {
              credited_items: null,
            },
            quantity: 1,
            subscription: null,
            tax_amounts: [],
            tax_rates: [],
            type: 'invoiceitem',
            unit_amount_excluding_tax: '100',
          },
        ],
        has_more: false,
        url: '/v1/invoices/in_1M323q2eZvKYlo2CVABrMDuB/lines',
      },
      livemode: false,
      metadata: {},
      next_payment_attempt: 1668195282,
      number: null,
      on_behalf_of: null,
      paid: false,
      paid_out_of_band: false,
      payment_intent: null,
      payment_settings: {
        default_mandate: null,
        payment_method_options: null,
        payment_method_types: null,
      },
      period_end: 1668729600,
      period_start: 1666051200,
      post_payment_credit_notes_amount: 0,
      pre_payment_credit_notes_amount: 0,
      quote: null,
      receipt_number: null,
      rendering_options: null,
      starting_balance: 0,
      statement_descriptor: null,
      status: 'draft',
      status_transitions: {
        finalized_at: null,
        marked_uncollectible_at: null,
        paid_at: null,
        voided_at: null,
      },
      // This is probably not how we are actually going to receive the event (although the Type Docs say maybe).
      // But for simulation purposes we'll do it like this.
      subscription: {
        id: 'sub_1M2hmW2eZvKYlo2CQpBzF556',
        object: 'subscription',
        application: null,
        application_fee_percent: null,
        automatic_tax: {
          enabled: false,
        },
        billing_cycle_anchor: 1668113728,
        billing_thresholds: null,
        cancel_at: null,
        cancel_at_period_end: false,
        canceled_at: null,
        collection_method: 'charge_automatically',
        created: 1668113728,
        currency: 'usd',
        current_period_end: 1670705728,
        current_period_start: 1668113728,
        customer: 'cus_Mm8PQkQBncel9Jaaa',
        days_until_due: null,
        default_payment_method: null,
        default_source: null,
        default_tax_rates: [],
        description: null,
        discount: null,
        ended_at: null,
        items: {
          object: 'list',
          data: [
            {
              id: 'si_MmGJvp7yCxMWpW',
              object: 'subscription_item',
              billing_thresholds: null,
              created: 1668113728,
              metadata: {},
              price: {
                id: 'price_1M2GPd2eZvKYlo2CDKi6TmT5',
                object: 'price',
                active: true,
                billing_scheme: 'per_unit',
                created: 1668008521,
                currency: 'usd',
                custom_unit_amount: null,
                livemode: false,
                lookup_key: null,
                metadata: {},
                nickname: null,
                product: 'prod_Mlb0cNGonAX7UM',
                recurring: {
                  aggregate_usage: null,
                  interval: 'month',
                  interval_count: 1,
                  usage_type: 'licensed',
                },
                tax_behavior: 'unspecified',
                tiers_mode: null,
                transform_quantity: null,
                type: 'recurring',
                unit_amount: 1200,
                unit_amount_decimal: '1200',
              },
              quantity: 1,
              subscription: 'sub_1M2hmW2eZvKYlo2CQpBzF556',
              tax_rates: [],
            },
          ],
          has_more: false,
          url: '/v1/subscription_items?subscription=sub_1M2hmW2eZvKYlo2CQpBzF556',
        },
        latest_invoice: null,
        livemode: false,
        metadata: {},
        next_pending_invoice_item_invoice: null,
        on_behalf_of: null,
        pause_collection: null,
        payment_settings: {
          payment_method_options: null,
          payment_method_types: null,
          save_default_payment_method: null,
        },
        pending_invoice_item_interval: null,
        pending_setup_intent: null,
        pending_update: null,
        schedule: null,
        start_date: 1668113728,
        status: 'active',
        test_clock: null,
        transfer_data: null,
        trial_end: null,
        trial_start: null,
      },
      subtotal: 100,
      subtotal_excluding_tax: 100,
      tax: null,
      test_clock: null,
      total: 100,
      total_discount_amounts: [],
      total_excluding_tax: 100,
      total_tax_amounts: [],
      transfer_data: null,
      webhooks_delivered_at: null,
    },
  },
  livemode: false,
  pending_webhooks: 0,
  request: {
    id: null,
    idempotency_key: null,
  },
  type: 'invoice.paid',
};

simulateStripeWebhook(
  url,
  stripeApiKey as string,
  stripeWebhookSecret as string,
  event,
)
  .then((_data) => {
    console.log('completed');
  })
  .catch((err) => {
    console.error('failed', err);
  });
