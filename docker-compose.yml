version: "3.8"
secrets:
  aws_creds:
    file: ~/.aws

services:
  openai-proxy:
    image: 221762091942.dkr.ecr.us-east-1.amazonaws.com/openai-proxy:latest
    container_name: openai-proxy
    ports:
      - 8080:8080
    environment:
      ENV: local
      PORT: :8080
    depends_on:
      - redis
    secrets:
      - source: aws_creds
        target: /root/.aws
    command: [  "./chamber", "exec", "openai-proxy/local", "--", "./openai-proxy" ]
  analytics-collector:
    image: 221762091942.dkr.ecr.us-east-1.amazonaws.com/analytics-collector:latest
    container_name: analytics-collector
    depends_on:
      localstack:
        condition: service_healthy
    environment:
      ENV: local
      PORT: :8080
    secrets:
      - source: aws_creds
        target: /root/.aws
    command: [  "./chamber", "exec", "analytics-collector/local", "--", "./analytics-collector", "--env", "local" ]
  slacker:
    build:
      dockerfile: ./build/Dockerfile.local
      context: .
    volumes:
      - ./apps:/app/apps
      - ./libs:/app/libs
      - ./configs:/app/configs
    depends_on:
      - postgres
      - redis
      - localstack
    environment:
      NODE_OVERRIDE_ENV: local${LOCAL_ENV}
      PORT: 3000
    secrets:
      - source: aws_creds
        target: /root/.aws
    command: [  "./chamber", "exec", "basebot/local${LOCAL_ENV}", "--", "npm", "run", "start", "slacker" ]
    ports:
      - 3000:3000
      - 9229:9229

  gistbot:
    build:
      dockerfile: ./build/Dockerfile.local
      context: .
    volumes:
      - ./apps:/app/apps
      - ./libs:/app/libs
      - ./configs:/app/configs
    depends_on:
      - postgres
      - redis
      - localstack
    environment:
      NODE_OVERRIDE_ENV: local${LOCAL_ENV}
      PORT: 3000
    secrets:
      - source: aws_creds
        target: /root/.aws
    command: [  "./chamber", "exec", "basebot/local${LOCAL_ENV}", "--", "npm", "run", "start", "gistbot" ]
    ports:
      - 3002:3000
      - 9230:9229


  treasury:
    build:
      dockerfile: ./build/Dockerfile.local
      context: .
    volumes:
      - ./apps:/app/apps
      - ./libs:/app/libs
      - ./configs:/app/configs
    depends_on:
      - postgres
      - redis
      - localstack
    environment:
      NODE_OVERRIDE_ENV: local${LOCAL_ENV}
      PORT: 3000
    secrets:
      - source: aws_creds
        target: /root/.aws
    command: [  "./chamber", "exec", "basebot/local${LOCAL_ENV}", "--", "npm", "run", "start", "treasury" ]
    ports:
      - 3003:3000
      - 9233:9229


  mailbot:
    build:
      dockerfile: ../mail-bot/build/images/Dockerfile.local
      context: ../mail-bot
    volumes:
      - ../mail-bot/apps/mail-bot/src:/app/src
      - ../mail-bot/apps/mail-bot/configs:/app/configs
    depends_on:
      - postgres
      - redis
      - localstack
    environment:
      NODE_ENV: local
      NODE_OVERRIDE_ENV: local
      PORT: 3000
      OAUTH_REDIRECT_BASE_URL: https://gistbot-mailbot${LOCAL_ENV}.baselabs.dev/mail/oauth-public
    secrets:
      - source: aws_creds
        target: /root/.aws
    command: [  "./chamber", "exec", "mail-bot/local", "--", "npm", "run", "start:debug" ]
    ports:
      - 3004:3000
      - 9234:9229

  bull-board:
    image: probablynot/bull-board-docker:5f09cbf7e76fa6f684a4f3aeb4b23cb6fa80a7cd
    volumes:
      - ./build:/configs
    environment:
      CONFIG_FILE: /configs/bullboardConfig.json
    depends_on:
      - mailbot
      - redis
    restart: on-failure
    ports:
      - 3005:3000

# Databases
  postgres:
    image: postgres:13.4
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: development
    ports:
      - 5432:5432
  redis:
    image: redis:latest
    ports:
      - 6379:6379
# AWS Services
  localstack:
    image: localstack/localstack
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "4510-4559:4510-4559"  # external services port range
    environment:
      - DEBUG=0
    volumes:
      - ./build/init_localstack.sh:/etc/localstack/init/ready.d/init-aws.sh # ready hook
    healthcheck:
      test:
        - CMD
        - bash
        - -c
        - awslocal events list-event-buses
      interval: 5s
      timeout: 10s
      start_period: 10s
